name: release
on:
  release:
    types: [created]

jobs:
  test-before-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.17.x"]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go for use with actions
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - run: go test ./...

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    needs: test-before-release
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
      - uses: actions/checkout@v2
      - name: Set VERSION env
        run: echo VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_DATE env
        run: echo BUILD_DATE=$(date) >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@v1.0
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.KRATOS_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.17.5.linux-amd64.tar.gz"
          build_flags: -v
          ldflags: -X "github.com/laghoule/kratos/cmd.version=${{ env.VERSION }}" -X "github.com/laghoule/kratos/cmd.buildDate=${{ env.BUILD_DATE }}" -X "github.com/laghoule/kratos/cmd.gitCommit=${{ github.sha }}" -X "github.com/laghoule/kratos/cmd.gitRef=${{ github.ref }}"
          project_path: "."
          extra_files: LICENSE README.md
          retry: 10

  docker:
    runs-on: ubuntu-latest
    needs: test-before-release
    steps:
      - uses: actions/checkout@v2
      - name: Set VERSION env
        run: echo VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Set BUILD_DATE env
        run: echo BUILD_DATE=$(date) >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@v1.0
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@3.04
        env:
          VERSION: ${{ env.VERSION }}
          BUILD_DATE: ${{ env.BUILD_DATE }}
          GIT_COMMIT: ${{ github.sha }}
          GIT_REF: ${{ github.ref }}
        with:
          name: laghoule/kratos
          username: ${{ github.actor }}
          password: ${{ secrets.KRATOS_TOKEN }}
          buildargs: VERSION, BUILD_DATE, GIT_COMMIT, GIT_REF
          registry: ghcr.io
          tag_names: true
